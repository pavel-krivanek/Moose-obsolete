'From Pharo7.0alpha of 16 April 2018 [Build information: Pharo-7.0+alpha.build.770.sha.807f3fef3c6377f49461afcfec83ae4ea2bd6ddc (32 Bit)] on 17 April 2018 at 10:04:39.220973 am'!!TonelParser methodsFor: 'private factory' stamp: 'PavelKrivanek 4/16/2018 17:03'!newTraitDefinitionFrom: anArray	| metadata traitDefs |	metadata := anArray sixth.		traitDefs := { 		MCTraitDefinition			name: (metadata at: #name)			traitComposition: (metadata at: #traits ifAbsent: [ '{}' ])			category: (metadata at: #category)			instVarNames: (metadata at: #instVars ifAbsent: [ #() ])			comment: (anArray second ifNil: [ '' ])			commentStamp: nil }.				metadata 		at: #classTraits		ifPresent: [ :classTraits |			traitDefs := traitDefs copyWith: (MCClassTraitDefinition 				baseTraitName: (metadata at: #name) 				classTraitComposition: classTraits				category: (metadata at: #category)) ].			^ traitDefs! !'From Pharo7.0alpha of 16 April 2018 [Build information: Pharo-7.0+alpha.build.770.sha.807f3fef3c6377f49461afcfec83ae4ea2bd6ddc (32 Bit)] on 17 April 2018 at 10:05:12.741179 am'!!TonelWriter methodsFor: 'private definitions' stamp: 'PavelKrivanek 4/16/2018 16:48'!typeTraitDefinitionOf: aClassDefinition	| definition |		definition := OrderedDictionary new 		at: #name put: aClassDefinition className; 		yourself.	aClassDefinition hasTraitComposition ifTrue: [ 		definition					at: #traits 			put: aClassDefinition traitCompositionString ].			aClassDefinition hasClassTraitComposition ifTrue: [ 		definition					at: #classTraits 			put: aClassDefinition classTraitCompositionString ].	(aClassDefinition variables select: #isInstanceVariable thenCollect: #name)		ifNotEmpty: [ :vars | definition at: #instVars put: vars asArray ].		definition at: #category put: aClassDefinition category.			^ self toSTON: definition! !'From Pharo7.0alpha of 24 April 2018 [Build information: Pharo-7.0+alpha.build.802.sha.83b142c6ac1bee96e43dca44762c3f05b11de0b4 (32 Bit)] on 24 April 2018 at 1:38:46.197111 pm'!!TraitBuilderEnhancer methodsFor: 'class modifications' stamp: 'PavelKrivanek 4/24/2018 13:24'!configureClass: newClass superclass: superclass withLayoutType: layoutType slots: slots	| resultingSlots |	self validateTraitComposition: self traitComposition ofClass: builder oldClass.	resultingSlots := self		eliminateDuplicates: slots , self traitComposition slotsCopy		withSuperclassSlots: (superclass ifNil: [#()] ifNotNil:[ :x | x allSlots]).	newClass superclass: superclass withLayoutType: layoutType slots: resultingSlots! !'From Pharo7.0alpha of 24 April 2018 [Build information: Pharo-7.0+alpha.build.802.sha.83b142c6ac1bee96e43dca44762c3f05b11de0b4 (32 Bit)] on 24 April 2018 at 1:38:54.584785 pm'!!TraitBuilderEnhancer methodsFor: 'class modifications' stamp: 'PavelKrivanek 4/24/2018 13:24'!configureMetaclass: newMetaclass superclass: superclass withLayoutType: aLayoutType slots: classSlots	| resultingSlots |	self validateTraitComposition: self classTraitComposition ofClass: builder oldMetaclass.	resultingSlots := self		eliminateDuplicates: classSlots , self classTraitComposition slotsCopy		withSuperclassSlots: superclass allSlots.	newMetaclass superclass: superclass withLayoutType: aLayoutType slots: resultingSlots! !'From Pharo7.0alpha of 25 April 2018 [Build information: Pharo-7.0+alpha.build.807.sha.870667407fd7e5b8be085344149bc71203431fc8 (32 Bit)] on 25 April 2018 at 4:48:52.817527 pm'!!TraitedMetaclass methodsFor: 'accessing method dictionary' stamp: 'PavelKrivanek 4/25/2018 16:48'!removeSelector: selector	"When a selector is removed it should be notified to my users.	Check the class TraitChange for more details"	| priorMethod priorProtocol origin oldMethod | 	priorMethod := self compiledMethodAt: selector ifAbsent: [^ nil].	origin := priorMethod origin.	priorProtocol := self whichCategoryIncludesSelector: selector.	self organization removeElement: selector.	oldMethod := self methodDict at: selector ifAbsent: [^ self].	self methodDict removeKey: selector.		self localMethodDict removeKey: selector ifAbsent: [  ].	super removeSelector: selector.	TraitChange removeSelector: selector on: self.		SystemAnnouncer uniqueInstance methodRemoved: priorMethod protocol: priorProtocol origin: origin! !			'From Pharo7.0alpha of 23 April 2018 [Build information: Pharo-7.0+alpha.build.800.sha.2e8b99acbf8ea10d9323e82f33ee0ecf6c844cf4 (32 Bit)] on 24 April 2018 at 11:07:07.470333 am'!!ShiftClassBuilder methodsFor: 'initialization' stamp: 'PavelKrivanek 4/24/2018 10:59'!fillFor: aClass	self		superclass: aClass superclass;		name: aClass getName;		layoutClass: aClass classLayout class;		slots: aClass localSlots;		sharedVariablesFromString: aClass classVariablesString;		sharedPools: aClass sharedPoolsString;		category: aClass category;		environment: aClass environment;		copyClassSlotsFromExistingClass;		oldClass: aClass.			self builderEnhancer fillBuilder: self from: aClass.! !	'From Pharo7.0alpha of 22 May 2018 [Build information: Pharo-7.0+alpha.build.927.sha.9c1536ef28b46cddd19f14198ac858aaf0488707 (32 Bit)] on 22 May 2018 at 11:03:55.906601 am'!!Class methodsFor: '*TraitsV2' stamp: 'PavelKrivanek 5/22/2018 11:03'!subclass: aSubclassSymbol uses: aTraitCompositionOrArray slots: slotDefinition classVariables: classVarDefinition poolDictionaries: someSharedPoolNames package: aCategorySymbol	^ self		subclass: aSubclassSymbol		uses: aTraitCompositionOrArray		layout: self classLayout class		slots: slotDefinition		classVariables: classVarDefinition		poolDictionaries: someSharedPoolNames		category: aCategorySymbol! !		'From Pharo7.0alpha of 22 May 2018 [Build information: Pharo-7.0+alpha.build.927.sha.9c1536ef28b46cddd19f14198ac858aaf0488707 (32 Bit)] on 22 May 2018 at 11:03:41.592675 am'!!Class methodsFor: '*TraitsV2' stamp: 'PavelKrivanek 5/22/2018 11:03'!subclass: aSubclassSymbol uses: aTraitCompositionOrArray slots: slotDefinition classVariables: classVarDefinition package: aCategorySymbol	^ self		subclass: aSubclassSymbol		uses: aTraitCompositionOrArray		layout: self classLayout class		slots: slotDefinition		classVariables: classVarDefinition		poolDictionaries: ''		category: aCategorySymbol! !	"remove a wronlgy implemented test""(DAMessageSendAnalyzerTest>>#testShouldGetPotentialMatchForUnimplementedCalls) removeFromSystem"!'From Pharo7.0alpha of 11 June 2018 [Build information: Pharo-7.0+alpha.build.1037.sha.7fc6bdfae725b2333054466b0a306ce6370c90a6 (32 Bit)] on 12 June 2018 at 2:14:08.067408 pm'!!Behavior methodsFor: 'accessing instances and variables' stamp: 'pk 6/12/2018 13:59'!allInstVarNames	"Answer an Array of the names of the receiver's instance variables. The 	Array ordering is the order in which the variables are stored and 	accessed by the interpreter."	| vars |	self superclass == nil		ifTrue: [vars := self slots collect: #name]	"Guarantee a copy is answered."		ifFalse: [vars := self superclass allInstVarNames , (self slots collect: #name)].	^vars! !"remove unrelated failing tests""(FileSystemTest>>#testFileNames) removeFromSystem.(ProperMethodCategorizationTest>>#testCopyMethodNeedsToBeInCopyingProtocol) removeFromSystem.(ProperMethodCategorizationTest>>#testPostCopyMethodNeedsToBeInCopyingProtocol) removeFromSystem.(ProperMethodCategorizationTest>>#testShallowCopyMethodNeedsToBeInCopyingProtocol) removeFromSystem."!"22262-MC-support-for-class-side-stateful-traits-instance-variables #1634"'From Pharo7.0alpha of 10 July 2018 [Build information: Pharo-7.0+alpha.build.1122.sha.9d8389221ee7e9c58d664a388fae86511c02edf7 (32 Bit)] on 12 July 2018 at 1:58:18.656393 pm'!!MCTraitDefinition methodsFor: 'installing' stamp: 'abc 7/12/2018 13:36'!createClass	| trait |	trait := Trait		named: name		uses: (Smalltalk compiler evaluate: self traitCompositionString)		slots: self instanceVariables		category: category.	trait ifNotNil: [		trait classComment: comment stamp: commentStamp.		self classInstanceVariables ifNotEmpty: [			trait classSide slots: self classInstanceVariables ]].	^trait! !'From Pharo7.0alpha of 10 July 2018 [Build information: Pharo-7.0+alpha.build.1122.sha.9d8389221ee7e9c58d664a388fae86511c02edf7 (32 Bit)] on 12 July 2018 at 1:57:51.938344 pm'!!MCTraitDefinition methodsFor: 'comparing' stamp: 'abc 7/12/2018 11:55'!hash	| hash |	hash := String stringHash: name initialHash: 0.	hash := String stringHash: self traitCompositionString initialHash: hash.	hash := String stringHash: (category ifNil: ['']) initialHash: hash.	variables do: [ :v |		hash := String stringHash: v name initialHash: hash ].		^ hash! !'From Pharo7.0alpha of 10 July 2018 [Build information: Pharo-7.0+alpha.build.1122.sha.9d8389221ee7e9c58d664a388fae86511c02edf7 (32 Bit)] on 12 July 2018 at 1:57:43.792525 pm'!!MCTraitDefinition methodsFor: 'comparing' stamp: 'abc 7/12/2018 11:55'!= aDefinition	self flag: #traits. "Ugly we harcoded the super superclass method.  We will have to refactor the definition hierarchy"		^ (aDefinition isKindOf: MCDefinition)		and: [(self isRevisionOf: aDefinition)		and: [self traitCompositionString = aDefinition traitCompositionString		and: [category = aDefinition category		and: [comment = aDefinition comment		and: [self sortedVariables = aDefinition sortedVariables]]]]]! !'From Pharo7.0alpha of 10 July 2018 [Build information: Pharo-7.0+alpha.build.1122.sha.9d8389221ee7e9c58d664a388fae86511c02edf7 (32 Bit)] on 12 July 2018 at 1:58:01.876494 pm'!!Trait methodsFor: '*Monticello' stamp: 'abc 7/12/2018 11:58'!asClassDefinition	self usesSpecialVariables ifFalse: [  		^ MCTraitDefinition			name: self name			traitComposition: self traitCompositionString			category: self category 			instVarNames: self instVarNames			classInstVarNames: self classSide slotNames			comment: self organization classComment asString			commentStamp: self organization commentStamp ].			^ MCTraitDefinition			name: self name			traitComposition: self traitCompositionString			category: self category 			instVarNames: (self localSlots collect: #definitionString)			classInstVarNames: self classSide slotNames			comment: self organization classComment asString			commentStamp: self organization commentStamp.		! !'From Pharo7.0alpha of 10 July 2018 [Build information: Pharo-7.0+alpha.build.1122.sha.9d8389221ee7e9c58d664a388fae86511c02edf7 (32 Bit)] on 17 July 2018 at 11:22:54.828558 am'!!TonelParser methodsFor: 'private factory' stamp: 'PavelKrivanek 7/17/2018 11:22'!newTraitDefinitionFrom: anArray	| metadata traitDefs |	metadata := anArray sixth.		traitDefs := { 		MCTraitDefinition			name: (metadata at: #name)			traitComposition: (metadata at: #traits ifAbsent: [ '{}' ])			category: (metadata at: #category)			instVarNames: (metadata at: #instVars ifAbsent: [ #() ])			classInstVarNames: (metadata at: 'classInstVars' ifAbsent: [ #() ])			comment: (anArray second ifNil: [ '' ])			commentStamp: nil }.				metadata 		at: #classTraits		ifPresent: [ :classTraits |			traitDefs := traitDefs copyWith: (MCClassTraitDefinition 				baseTraitName: (metadata at: #name) 				classTraitComposition: classTraits				category: (metadata at: #category)) ].			^ traitDefs! !'From Pharo7.0alpha of 10 July 2018 [Build information: Pharo-7.0+alpha.build.1122.sha.9d8389221ee7e9c58d664a388fae86511c02edf7 (32 Bit)] on 17 July 2018 at 10:50:23.980581 am'!!TonelWriter methodsFor: 'private definitions' stamp: 'PavelKrivanek 7/17/2018 10:50'!typeTraitDefinitionOf: aClassDefinition	| definition |		definition := OrderedDictionary new 		at: #name put: aClassDefinition className; 		yourself.	aClassDefinition hasTraitComposition ifTrue: [ 		definition					at: #traits 			put: aClassDefinition traitCompositionString ].			aClassDefinition hasClassTraitComposition ifTrue: [ 		definition					at: #classTraits 			put: aClassDefinition classTraitCompositionString ].	(aClassDefinition variables select: #isInstanceVariable thenCollect: #name)		ifNotEmpty: [ :vars | definition at: #instVars put: vars asArray ].	(aClassDefinition variables select: #isClassInstanceVariable thenCollect: #name)		ifNotEmpty: [ :vars | definition at: #classInstVars put: vars asArray ].		definition at: #category put: aClassDefinition category.			^ self toSTON: definition! !	"22278/Class-re-definition-makes-class-varialbes-from-tratis-local" !		'From Pharo7.0alpha of 17 July 2018 [Build information: Pharo-7.0+alpha.build.1127.sha.fdaba77638da242e77d7b1f6657b55d770d85d35 (32 Bit)] on 23 July 2018 at 2:00:51.41591 pm'!!ShiftClassBuilder methodsFor: 'copying' stamp: 'pk 7/23/2018 13:41'!copyClassSlotsFromExistingClass	"Ugly helper method: I copy over the class slots of the class in my builder environment."	| anOldClass oldSlots |	anOldClass := self environment at: name ifAbsent: [ ^ self ].	oldSlots := anOldClass class classLayout slotScope visibleSlots.	self classSlots:(oldSlots select: #isLocal thenCollect: [ :e | e copy index: nil; yourself ])! !