"
I am the root class for representing usage data generated by GTDebugger. 
All events have a timestamp.
"
Class {
	#name : #GTDebuggerRecorderEvent,
	#superclass : #GTBasicRecorderEvent,
	#category : #'GT-Debugger-EventRecorder-Events'
}

{ #category : #'instance creation' }
GTDebuggerRecorderEvent class >> fromAnnouncement: anAnnouncement [

	^ self new fromAnnouncement: anAnnouncement
]

{ #category : #accessing }
GTDebuggerRecorderEvent >> addWindowHashFor: aPresentation [

	aPresentation window ifNotNil: [ :aWindow |
		self infoAt: #windowHash put: aWindow identityHash ]
]

{ #category : #initialization }
GTDebuggerRecorderEvent >> fromAnnouncement: anAnnouncement [

]

{ #category : #testing }
GTDebuggerRecorderEvent >> isChangeDebugger [
	^ false
]

{ #category : #testing }
GTDebuggerRecorderEvent >> isCloseDebugger [
	^ false
]

{ #category : #testing }
GTDebuggerRecorderEvent >> isDebugAction [
	^ false
]

{ #category : #testing }
GTDebuggerRecorderEvent >> isInspectorSelectionChange [
	^ false
]

{ #category : #testing }
GTDebuggerRecorderEvent >> isOpenDebugger [
	^ false
]

{ #category : #testing }
GTDebuggerRecorderEvent >> isOpenOrCloseDebugger [
	^ self isOpenDebugger or: [ self isCloseDebugger ]
]

{ #category : #testing }
GTDebuggerRecorderEvent >> isStackSelectionChange [
	^ false
]
