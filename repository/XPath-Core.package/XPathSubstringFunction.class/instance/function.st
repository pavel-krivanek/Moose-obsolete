invoking
function
	| string start end |

	string := self argumentAt: 1.
	start := (self argumentAt: 2) xPathRounded.
	self totalArguments > 2
		ifTrue: [end := start + (self argumentAt: 3) xPathRounded - 1]
		ifFalse: [end := string size].

	"if either start or end are NaN, the test will fail"
	(start <= end
		and: [start <= string size
			and: [end >= 1]])
		ifTrue: [
			"the #xPathRounded calls got rid of any fraciton part, but
			integer flots still must be converted to integers because
			#copyFrom:to: won't take integer floats, and the #min:/#max:
			eliminate +/- infinity"
			^ string
				copyFrom: (start max: 1) asInteger
				to: (end min: string size) asInteger]
		ifFalse: [^ '']	.