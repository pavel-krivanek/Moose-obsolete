generated
symbolNames
	^ #('">>>"' '"<"' '">>"' '"<<"' '">"' '"<="' '"!"' '"**"' '">="' '"%"' '"*"' '"~"' '"^"' '"|"' '"&"' '"!=="' '"false"' '"-"' '"in"' '"=="' '"instanceof"' '"==="' '"!="' '"["' '"]"' '"..."' '","' '"{"' '":"' '"else"' '"this"' '"="' '")"' '"("' '"&&"' '"void"' '"typeof"' '"delete"' '"--"' '"+"' '"||"' '"new"' '"super"' '"."' '"++"' '"target"' '"debugger"' '"function"' '"finally"' '"catch"' '"=>"' '"get"' '"?"' '"default"' '"set"' '"try"' '"throw"' '"switch"' '"export"' '"null"' '"from"' '"as"' '"true"' '"case"' '"class"' '"extends"' '"yield"' '"import"' '"static"' '">>>="' '"&="' '">>="' '"<<="' '"with"' '"|="' '"*="' '"%="' '"^="' '"-="' '"+="' '"let"' '"const"' '"break"' '"of"' '"continue"' '"return"' '"for"' '"if"' '"do"' '"while"' '"var"' '<semicolon>' '<slash>' '<slashEqual>' '<rightBrace>' '<comment>' '<identifier>' '<identifierName>' '<whitespace>' '<string>' '<numeric>' '<regular_expression>' '<no_substitution_template>' '<template_head>' '<template_middle>' '<template_end>' '<patternToken>' 'ArrayLiteral' 'ObjectLiteral' 'FunctionExpression' 'ClassExpression' 'GeneratorExpression' 'RegularExpressionLiteral' 'TemplateLiteral' 'ParenthesizedExpression' 'PrimaryExpression' 'ParameterListopt' 'BindingPattern' 'CoverParenthesizedExpressionAndArrowParameterList' 'ParameterList' 'BindingElement' 'NullLiteral' 'BooleanLiteral' 'NumericLiteral' 'StringLiteral' 'Elisionopt' 'ElementList' 'Elision' 'AssignmentExpression' 'SpreadElement' 'PropertyDefinitionList' 'PropertyDefinition' 'CoverInitializedName' 'PropertyName' 'MethodDefinition' 'LiteralPropertyName' 'Expression' 'Initializer' 'Initializeropt' 'Literal' 'StartTemplateLiteral' 'Identifieropt' 'TemplateSpans' 'Identifier' 'TemplateMiddleList' 'B e g i n' 'MemberExpression' 'SuperProperty' 'MetaProperty' 'Arguments' 'NewTarget' 'NewExpression' 'SuperCall' 'CallExpression' 'ArgumentList' 'LeftHandSideExpression' 'UnaryExpression' 'UpdateExpression' 'ExponentiationExpression' 'MultiplicativeExpression' 'AdditiveExpression' 'ShiftExpression' 'RelationalExpression' 'EqualityExpression' 'BitwiseANDExpression' 'BitwiseXORExpression' 'BitwiseORExpression' 'LogicalANDExpression' 'LogicalORExpression' 'ConditionalExpression' 'YieldExpression' 'ArrowFunction' 'AssignmentOperator' 'Expressionopt' 'BlockStatement' 'VariableStatement' 'EmptyStatement' 'ExpressionStatement' 'IfStatement' 'BreakableStatement' 'ContinueStatement' 'BreakStatement' 'ReturnStatement' 'WithStatement' 'Module' 'goal' 'TryStatement' 'DebuggerStatement' 'HoistableDeclaration' 'ClassDeclaration' 'LexicalDeclaration' 'Declaration' 'FunctionDeclaration' 'GeneratorDeclaration' 'IterationStatement' 'SwitchStatement' 'Block' 'StatementListopt' 'StatementList' 'StatementListItem' 'LetOrConst' 'BindingList' 'LexicalBinding' 'VariableDeclarationList' 'VariableDeclaration' 'ObjectBindingPattern' 'ArrayBindingPattern' 'BindingPropertyList' 'BindingRestElementopt' 'BindingElementList' 'BindingProperty' 'BindingElisionElement' 'SingleNameBinding' 'BindingRestElement' 'ForBinding' 'ForDeclaration' 'CheckEOL' 'CaseBlock' 'CaseClausesopt' 'DefaultClause' 'CaseClauses' 'CaseClause' 'LabeledItem' 'Catch' 'Finally' 'CatchParameter' 'FormalParameters' 'FunctionBody' 'StrictFormalParameters' 'FormalParameterList' 'FunctionRestParameter' 'FormalsList' 'FormalParameter' 'FunctionStatementList' 'ArrowParameters' 'ConciseBody' 'GeneratorMethod' 'PropertySetParameterList' 'GeneratorBody' 'staropt' 'ClassTail' 'ClassHeritageopt' 'ClassBodyopt' 'ClassHeritage' 'ClassBody' 'ClassElementList' 'ClassElement' 'ScriptBodyopt' 'ScriptBody' 'ModuleBodyopt' 'ModuleBody' 'ModuleItemList' 'ModuleItem' 'ImportDeclaration' 'ExportDeclaration' 'ImportClause' 'FromClause' 'ModuleSpecifier' 'ImportedDefaultBinding' 'NameSpaceImport' 'NamedImports' 'ImportedBinding' 'ImportsList' 'ImportSpecifier' 'ExportClause' 'ExportsList' 'ExportSpecifier' 'Statement' 'Script' 'E O F' 'error' 'ThrowStatement' 'LabelledStatement' 'ComputedPropertyName')