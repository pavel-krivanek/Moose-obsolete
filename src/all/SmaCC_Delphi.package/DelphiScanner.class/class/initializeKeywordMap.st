generated-initialization
initializeKeywordMap
	keywordMap := Dictionary new.
	#(#(135 'ABSOLUTE' 35) #(135 'ABSTRACT' 25) #(135 'AND' 47) #(135 'ARRAY' 20) #(135 'AS' 41) #(135 'ASM' 94) #(135 'ASSEMBLER' 120) #(135 'AT' 130) #(135 'BEGIN' 75) #(135 'CASE' 6) #(135 'CDECL' 129) #(135 'CLASS' 2) #(135 'CONST' 52) #(135 'CONSTRUCTOR' 74) #(135 'DEFAULT' 109) #(135 'DEPRECATED' 11) #(135 'DESTRUCTOR' 77) #(135 'DISPID' 108) #(135 'DISPINTERFACE' 19) #(135 'DIV' 34) #(135 'DO' 71) #(135 'DOWNTO' 92) #(135 'DYNAMIC' 121) #(135 'ELSE' 43) #(135 'END' 4) #(135 'EXCEPT' 81) #(135 'EXPORT' 115) #(135 'EXPORTS' 62) #(135 'EXTERNAL' 100) #(135 'FAR' 127) #(135 'FILE' 64) #(135 'FINAL' 122) #(135 'FINALIZATION' 17) #(135 'FINALLY' 91) #(135 'FOR' 26) #(135 'FORWARD' 102) #(135 'FUNCTION' 13) #(135 'GOTO' 73) #(135 'HELPER' 15) #(135 'IF' 66) #(135 'IMPLEMENTATION' 96) #(135 'IMPLEMENTS' 111) #(135 'IN' 53) #(135 'INDEX' 21) #(135 'INHERITED' 82) #(135 'INITIALIZATION' 86) #(135 'INLINE' 117) #(135 'INTERFACE' 56) #(135 'IS' 40) #(135 'LABEL' 79) #(135 'LIBRARY' 63) #(135 'LOCAL' 118) #(135 'MEM' 88) #(135 'MEMW' 83) #(135 'MESSAGE' 105) #(135 'MOD' 37) #(135 'NAME' 113) #(135 'NEAR' 128) #(135 'NODEFAULT' 112) #(135 'NOT' 16) #(135 'OBJECT' 27) #(135 'OF' 42) #(135 'ON' 80) #(135 'OPERATOR' 97) #(135 'OR' 44) #(135 'OUT' 98) #(135 'OVERLOAD' 101) #(135 'OVERRIDE' 104) #(135 'PACKED' 3) #(135 'PASCAL' 124) #(135 'PLATFORM' 12) #(135 'PRIVATE' 29) #(135 'PROCEDURE' 14) #(135 'PROGRAM' 60) #(135 'PROPERTY' 22) #(135 'PROTECTED' 24) #(135 'PUBLIC' 23) #(135 'PUBLISHED' 18) #(135 'RAISE' 90) #(135 'READ' 33) #(135 'READONLY' 107) #(135 'RECORD' 1) #(135 'REGISTER' 114) #(135 'REINTRODUCE' 123) #(135 'REPEAT' 72) #(135 'RESOURCESTRING' 54) #(135 'SAFECALL' 119) #(135 'SEALED' 28) #(135 'SET' 7) #(135 'SHL' 36) #(135 'SHR' 39) #(135 'STATIC' 116) #(135 'STDCALL' 103) #(135 'STORED' 106) #(135 'STRICT' 30) #(135 'THEN' 69) #(135 'THREADVAR' 78) #(135 'TO' 93) #(135 'TRY' 70) #(135 'TYPE' 65) #(135 'UNIT' 57) #(135 'UNSAFE' 125) #(135 'UNTIL' 67) #(135 'USES' 51) #(135 'VAR' 99) #(135 'VIRTUAL' 126) #(135 'WHILE' 95) #(135 'WITH' 68) #(135 'WRITE' 76) #(135 'WRITEONLY' 110) #(135 'XOR' 46) #(136 'ABSOLUTE' 35) #(136 'ABSTRACT' 25) #(136 'AND' 47) #(136 'ARRAY' 20) #(136 'AS' 41) #(136 'ASM' 94) #(136 'ASSEMBLER' 120) #(136 'AT' 130) #(136 'BEGIN' 75) #(136 'CASE' 6) #(136 'CDECL' 129) #(136 'CLASS' 2) #(136 'CONST' 52) #(136 'CONSTRUCTOR' 74) #(136 'DEFAULT' 109) #(136 'DEPRECATED' 11) #(136 'DESTRUCTOR' 77) #(136 'DISPID' 108) #(136 'DISPINTERFACE' 19) #(136 'DIV' 34) #(136 'DO' 71) #(136 'DOWNTO' 92) #(136 'DYNAMIC' 121) #(136 'ELSE' 43) #(136 'END' 4) #(136 'EXCEPT' 81) #(136 'EXPORT' 115) #(136 'EXPORTS' 62) #(136 'EXTERNAL' 100) #(136 'FAR' 127) #(136 'FILE' 64) #(136 'FINAL' 122) #(136 'FINALIZATION' 17) #(136 'FINALLY' 91) #(136 'FOR' 26) #(136 'FORWARD' 102) #(136 'FUNCTION' 13) #(136 'GOTO' 73) #(136 'HELPER' 15) #(136 'IF' 66) #(136 'IMPLEMENTATION' 96) #(136 'IMPLEMENTS' 111) #(136 'IN' 53) #(136 'INDEX' 21) #(136 'INHERITED' 82) #(136 'INITIALIZATION' 86) #(136 'INLINE' 117) #(136 'INTERFACE' 56) #(136 'IS' 40) #(136 'LABEL' 79) #(136 'LIBRARY' 63) #(136 'LOCAL' 118) #(136 'MEM' 88) #(136 'MEMW' 83) #(136 'MESSAGE' 105) #(136 'MOD' 37) #(136 'NAME' 113) #(136 'NEAR' 128) #(136 'NODEFAULT' 112) #(136 'NOT' 16) #(136 'OBJECT' 27) #(136 'OF' 42) #(136 'ON' 80) #(136 'OPERATOR' 97) #(136 'OR' 44) #(136 'OUT' 98) #(136 'OVERLOAD' 101) #(136 'OVERRIDE' 104) #(136 'PACKED' 3) #(136 'PASCAL' 124) #(136 'PLATFORM' 12) #(136 'PRIVATE' 29) #(136 'PROCEDURE' 14) #(136 'PROGRAM' 60) #(136 'PROPERTY' 22) #(136 'PROTECTED' 24) #(136 'PUBLIC' 23) #(136 'PUBLISHED' 18) #(136 'RAISE' 90) #(136 'READ' 33) #(136 'READONLY' 107) #(136 'RECORD' 1) #(136 'REGISTER' 114) #(136 'REINTRODUCE' 123) #(136 'REPEAT' 72) #(136 'RESOURCESTRING' 54) #(136 'SAFECALL' 119) #(136 'SEALED' 28) #(136 'SET' 7) #(136 'SHL' 36) #(136 'SHR' 39) #(136 'STATIC' 116) #(136 'STDCALL' 103) #(136 'STORED' 106) #(136 'STRICT' 30) #(136 'THEN' 69) #(136 'THREADVAR' 78) #(136 'TO' 93) #(136 'TRY' 70) #(136 'TYPE' 65) #(136 'UNIT' 57) #(136 'UNSAFE' 125) #(136 'UNTIL' 67) #(136 'USES' 51) #(136 'VAR' 99) #(136 'VIRTUAL' 126) #(136 'WHILE' 95) #(136 'WITH' 68) #(136 'WRITE' 76) #(136 'WRITEONLY' 110) #(136 'XOR' 46))
		do: [ :each | 
			(keywordMap at: each first ifAbsentPut: [ Dictionary new ])
				at: (each at: 2)
				put: each last ].
	^ keywordMap