"
I provide the ability to browse composite parsers.

One can select a parser from a list and see all of the production rules of the grammar.

When a production rule is selected, on can test it by inputting a sample and clicking a ""play"" button to get results.

I also allow one to see the source of a production rule, see the graph or rules, a map of the ruleset, create examples of tokens for matching a given rule, see first and follow.

Based on the parsing of the content provided, there is some support for debugging.


self open
"
Class {
	#name : #PPBrowser,
	#superclass : #GLMCompositePresentation,
	#category : #'PetitGui-Core'
}

{ #category : #accessing }
PPBrowser class >> icon [
	^ (Form
	extent: 16@16
	depth: 32
	fromArray
	offset: 0@0)
]

{ #category : #accessing }
PPBrowser class >> label [
	^ 'PetitParser'
]

{ #category : #private }
PPBrowser class >> menuCommandOn: aBuilder [
	<worldMenu>

	(aBuilder item: self label)
		parent: #Tools;
		icon: self icon;
		action: [ self open ]
]

{ #category : #'instance creation' }
PPBrowser class >> open [ 
	<script>
	^ self openOn: PPCompositeParser
]

{ #category : #'instance creation' }
PPBrowser class >> openOn: aClass [
	"Less glamorous versions of Glamour do not work with the new browser, fall back to the old one in this case."
	
	(self superclass canUnderstand: #compose)
		ifFalse: [ ^ PPDrabBrowser new openOn: aClass ].
	^ self new openOn: aClass
]

{ #category : #'private building' }
PPBrowser >> addNewSubParserOf: class in: list [
	| refactoring className |
	className := UIManager default request: 'Parser class name' initialAnswer: '' title: 'Add new parser'.
	^ className
		ifNotNil: [ 
			refactoring := PPAddParserRefactoring name: className asSymbol category: #ParserExample superclass: class.
			PPRefactoringUtils new performRefactoring: refactoring.
			list update ]
]

{ #category : #'private building' }
PPBrowser >> classesIn: composite [
	composite tree
		title: 'Parsers';
		format: [ :class | class name ];
		children: [ :class | class subclasses asSortedCollection: [ :a :b | a name < b name ] ];
		display: [ :class | class subclasses asSortedCollection: [ :a :b | a name < b name ] ];
		selectionAct: [ :list :class | Smalltalk tools browser openOnClass: list selection ] on: $b entitled: 'Browse (b)';
		selectionAct: [ :list :class | self addNewSubParserOf: list selection in: list ]
			entitled: 'Add new sub parser';
		act: [ :list :class | self addNewSubParserOf: class in: list ]
			icon: GLMUIThemeExtraIcons glamorousAdd
			on: $+
			entitled: 'Add new parser'
]

{ #category : #building }
PPBrowser >> compose [
	"self open"
	self title: self defaultTitle.
	self tabulator with: [ :tabulator | 
		tabulator 
			column: #classes;
			column: #parser span: 3.
		tabulator transmit to: #classes; andShow: [:a | 
			self classesIn: a ]. 
		tabulator transmit to: #parser; from: #classes; andShow: [:a | 
			a custom: PPParserBrowser new noTitle ]
	]
]

{ #category : #building }
PPBrowser >> defaultTitle [
	^ 'PetitParser Browser'
]
