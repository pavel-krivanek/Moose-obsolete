generated
symbolNames
	^ #('"nonmutating"' '"override"' '"mutating"' '"class"' '"static"' '"<"' '">"' '"unowned(safe)"' '"unowned"' '"=="' '"return"' '"protocol"' '"var"' '"enum"' '"struct"' '"func"' '"weak"' '"import"' '"unowned(unsafe)"' '"fallthrough"' '"typealias"' '"in"' '"while"' '")"' '"("' '"do"' '","' '"for"' '"else"' '"if"' '";"' '"let"' '"where"' '"break"' '"default"' '":"' '"continue"' '"{"' '"}"' '"switch"' '"."' '"case"' '"?"' '"__FILE__"' '"&"' '"]"' '"__LINE__"' '"as"' '"@"' '"__FUNCTION__"' '"__COLUMN__"' '"["' '"is"' '"convenience"' '"..."' '"Protocol"' '"Type"' '"#"' '"super"' '"dynamicType"' '"self"' '"none"' '"!"' '"->"' '"_"' '"didSet"' '"willSet"' '"init"' '"="' '"get"' '"extension"' '"deinit"' '"set"' '"inout"' '"associativity"' '"left"' '"precedence"' '"infix"' '"right"' '"operator"' '"prefix"' '"subscript"' '"postfix"' '<whitespace>' '<comment>' '<identifier>' '<integer_literal>' '<floating_point_literal>' '<full_string_literal>' '<operator>' 'identifier_list' 'B e g i n' 'literal' 'string_literal' 'binary_operator' 'prefix_operator' 'postfix_operator' 'expression' '_semicolon' 'declaration' 'loop_statement' 'branch_statement' 'labeled_statement' 'control_transfer_statement' 'statement' 'statements' 'for_statement' 'for_in_statement' 'while_statement' 'do_while_statement' '_for_init' '_expression' 'code_block' 'variable_declaration' 'expression_list' 'for_init' 'pattern' 'while_condition' 'if_statement' 'switch_statement' 'if_condition' '_else_clause' 'else_clause' '_switch_cases' 'switch_case' 'switch_cases' 'case_label' 'default_label' 'case_item_list' '_guard_clause' 'guard_expression' 'guard_clause' 'statement_label' 'label_name' 'break_statement' 'continue_statement' 'fallthrough_statement' 'return_statement' '_label_name' 'generic_parameter_list' '_requirement_clause' 'generic_parameter_clause' 'generic_parameter' 'type_name' 'type_identifier' 'protocol_composition_type' 'requirement_list' 'requirement_clause' 'requirement' 'conformance_requirement' 'same_type_requirement' 'generic_argument_list' 'generic_argument_clause' 'generic_argument' 'type' 'import_declaration' 'constant_declaration' 'typealias_declaration' 'function_declaration' 'enum_declaration' 'struct_declaration' 'class_declaration' 'protocol_declaration' 'initializer_declaration' 'deinitializer_declaration' 'extension_declaration' 'subscript_declaration' 'operator_declaration' 'declarations' 'declaration_specifiers' 'declaration_specifier' '_statements' '_attributes' '_import_kind' 'import_path' 'import_kind' 'import_path_identifier' '_declaration_specifiers' 'pattern_initializer_list' 'pattern_initializer' '_initializer' 'initializer' 'top_level_declaration' 'variable_name' 'type_annotation' 'getter_setter_block' 'getter_setter_keyword_block' 'willSet_didSet_block' 'getter_clause' '_setter_clause' 'setter_clause' '_setter_name' 'setter_name' 'getter_keyword_clause' '_setter_keyword_clause' 'setter_keyword_clause' 'willSet_clause' '_didSet_clause' 'didSet_clause' 'typealias_head' 'typealias_assignment' 'typealias_name' 'function_head' 'function_name' '_generic_parameter_clause' 'function_signature' 'function_body' 'parameter_clauses' '_function_result' 'function_result' 'parameter_clause' 'parameter_list' '_ellipsis' 'parameter' '_inout' '_let' '_hash' 'parameter_name' '_local_parameter_name' '_default_argument_clause' 'local_parameter_name' 'default_argument_clause' 'union_style_enum' 'raw_value_style_enum' 'enum_name' '_union_style_enum_members' 'union_style_enum_member' 'union_style_enum_members' 'union_style_enum_case_clause' 'union_style_enum_case_list' 'union_style_enum_case' 'enum_case_name' '_tuple_type' '_raw_value_style_enum_members' 'raw_value_style_enum_member' 'raw_value_style_enum_members' 'raw_value_style_enum_case_clause' 'raw_value_style_enum_case_list' 'raw_value_style_enum_case' '_raw_value_assignment' 'raw_value_assignment' 'struct_name' '_type_inheritance_clause' 'struct_body' '_declarations' 'class_name' 'class_body' 'protocol_name' 'protocol_body' '_protocol_member_declarations' 'protocol_property_declaration' 'protocol_method_declaration' 'protocol_initializer_declaration' 'protocol_subscript_declaration' 'protocol_association_type_declaration' 'protocol_member_declaration' 'protocol_member_declarations' 'initializer_head' 'subscript_head' 'subscript_result' '_typealias_assignment' 'initializer_body' '_convenience' 'extension_body' 'prefix_operator_declaration' 'postfix_operator_declaration' 'infix_operator_declaration' '_infix_operator_attributes' '_precedence_clause' '_associativity_clause' 'infix_operator_attributes' 'precedence_level' 'precedence_clause' 'associativity' 'associativity_clause' 'wildcard_pattern' '_type_annotation' 'identifier_pattern' 'value_binding_pattern' 'tuple_pattern' 'enum_case_pattern' 'type_casting_pattern' 'expression_pattern' '_tuple_pattern_element_list' 'tuple_pattern_element' 'tuple_pattern_element_list' '_type_identifier' '_tuple_pattern' 'is_pattern' 'as_pattern' 'attribute_name' '_attribute_argument_clause' 'attribute' '_balanced_tokens' 'attribute_argument_clause' 'attributes' 'balanced_token' 'balanced_tokens' 'prefix_expression' 'binary_expressions' 'postfix_expression' 'in_out_expression' 'assignment_operator' 'conditional_operator' 'type_casting_operator' 'binary_expression' '_generic_argument_clause' 'literal_expression' 'self_expression' 'superclass_expression' 'closure_expression' 'parenthesized_expression' 'implicit_member_expression' 'wildcard_expression' 'primary_expression' 'array_literal' 'dictionary_literal' '_array_literal_items' 'array_literal_item' '_comma' 'array_literal_items' 'dictionary_literal_items' 'dictionary_literal_item' 'superclass_method_expression' 'superclass_subscript_expression' 'superclass_initializer_expression' '_closure_signature' 'capture_list' 'closure_signature' 'capture_specifier' '_expression_element_list' 'expression_element' 'expression_element_list' 'function_call_expression' 'initializer_expression' 'explicit_member_expression' 'postfix_self_expression' 'dynamic_type_expression' 'subscript_expression' 'forced_value_expression' 'optional_chaining_expression' '_parenthesized_expression' 'trailing_closure' 'array_type' 'dictionary_type' 'function_type' 'tuple_type' 'optional_type' 'implicitly_unwrapped_optional_type' 'metatype_type' '_tuple_type_body' 'tuple_type_element_list' 'tuple_type_body' 'tuple_type_element' 'element_name' '_protocol_identifier_list' 'protocol_identifier' 'protocol_identifier_list' 'type_inheritance_list' 'type_inheritance_clause' '_binary_expressions' '_prefix_operator' 'E O F' 'error' 'file' 'variable_declaration_head')