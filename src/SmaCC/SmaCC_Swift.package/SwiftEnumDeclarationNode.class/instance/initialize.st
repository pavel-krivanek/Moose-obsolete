generated-initialize-release
initialize
	super initialize.
	_Tokens := OrderedCollection new: 2.
	identifierTokens := OrderedCollection new: 2.
	leftParenTokens := OrderedCollection new: 2.
	rightParenTokens := OrderedCollection new: 2.
	leftBracketTokens := OrderedCollection new: 2.
	rightBracketTokens := OrderedCollection new: 2.
	leftBraceTokens := OrderedCollection new: 2.
	rightBraceTokens := OrderedCollection new: 2.
	integer_literalTokens := OrderedCollection new: 2.
	floating_point_literalTokens := OrderedCollection new: 2.
	operatorTokens := OrderedCollection new: 2.
	full_string_literalTokens := OrderedCollection new: 2.
	lessThanTokens := OrderedCollection new: 2.
	colonTokens := OrderedCollection new: 2.
	commaTokens := OrderedCollection new: 2.
	greaterThanTokens := OrderedCollection new: 2.
	periodTokens := OrderedCollection new: 2.
	protocolTokens := OrderedCollection new: 2.
	whereTokens := OrderedCollection new: 2.
	equalEqualTokens := OrderedCollection new: 2.
	importTokens := OrderedCollection new: 2.
	typealiasTokens := OrderedCollection new: 2.
	structTokens := OrderedCollection new: 2.
	classTokens := OrderedCollection new: 2.
	enumTokens := OrderedCollection new: 2.
	varTokens := OrderedCollection new: 2.
	funcTokens := OrderedCollection new: 2.
	mutatingTokens := OrderedCollection new: 2.
	nonmutatingTokens := OrderedCollection new: 2.
	overrideTokens := OrderedCollection new: 2.
	staticTokens := OrderedCollection new: 2.
	unownedTokens := OrderedCollection new: 2.
	unownedLeftParensafeRightParenTokens := OrderedCollection new: 2.
	unownedLeftParenunsafeRightParenTokens := OrderedCollection new: 2.
	weakTokens := OrderedCollection new: 2.
	letTokens := OrderedCollection new: 2.
	inializers := OrderedCollection new: 2.
	minusGreaterThanTokens := OrderedCollection new: 2.
	questionMarkTokens := OrderedCollection new: 2.
	bangTokens := OrderedCollection new: 2.
	typeTokens := OrderedCollection new: 2.
	periodPeriodPeriodTokens := OrderedCollection new: 2.
	blocks := OrderedCollection new: 2.
	getTokens := OrderedCollection new: 2.
	setTokens := OrderedCollection new: 2.
	equalTokens := OrderedCollection new: 2.
	expressions := OrderedCollection new: 2.
	willSetTokens := OrderedCollection new: 2.
	didSetTokens := OrderedCollection new: 2.
	inoutTokens := OrderedCollection new: 2.
	deinitTokens := OrderedCollection new: 2.
	extensionTokens := OrderedCollection new: 2.
	caseTokens := OrderedCollection new: 2.
	declarations := OrderedCollection new: 2.
	convenienceTokens := OrderedCollection new: 2.
	initTokens := OrderedCollection new: 2.
	subscriptTokens := OrderedCollection new: 2.